Sub SplitDataByColumnJ()
    Dim wsSource As Worksheet: Set wsSource = ThisWorkbook.Sheets("MainData")
    Dim wsLookup As Worksheet: Set wsLookup = ThisWorkbook.Sheets("Client Data")

    Dim lastRow As Long: lastRow = wsSource.Cells(wsSource.Rows.Count, "K").End(xlUp).Row
    Dim headers As Range: Set headers = wsSource.Range("C1:M1")

    Dim groups, sheetNames, timeNotes, tabColors
    groups = Array( _
        Array("33", "49", "72", "69", "20", "22", "24", "18", "7Z", "11", "17"), _
        Array("30", "32", "8R"), _
        Array("8G", "12"), _
        Array("27", "52"), _
        Array("28", "25", "7R", "10", "13", "SG", "DA", "PA"), _
        Array("19", "05", "14", "06", "04", "07", "5", "6", "4", "7"), _
        Array("7B", "01", "9C", "02", "16", "15", "1", "2") _
    )

    sheetNames = Array( _
        "33_49_72_69_20_22_24_18_7Z_11", "30_32_8R", "8G_12", "27_52", _
        "28_25_7R_10_13_SG_DA_PA", "19_05_14_06_04_07", "7B_01_9C_02_16_15" _
    )

    timeNotes = Array( _
        "12 PM – 1 PM", "1:30 PM – 2:30 PM", "3 PM – 4 PM", "4:30 PM – 5:30 PM", _
        "5 PM – 6 PM", "6:30 PM – 7 PM", "7 PM – 8 PM" _
    )

    tabColors = Array(RGB(255, 230, 153), RGB(198, 239, 206), RGB(189, 215, 238), _
                      RGB(255, 199, 206), RGB(217, 217, 217), RGB(180, 198, 231), _
                      RGB(244, 204, 204))

    Dim lookupData As Variant
    Dim lookupLastRow As Long: lookupLastRow = wsLookup.Cells(wsLookup.Rows.Count, "C").End(xlUp).Row
    lookupData = wsLookup.Range("A2:J" & lookupLastRow).Value

    Dim i As Integer, j As Long, wsNew As Worksheet, val As String
    Application.ScreenUpdating = False

    For i = 0 To UBound(groups)
        On Error Resume Next
        Application.DisplayAlerts = False
        ThisWorkbook.Sheets(sheetNames(i)).Delete
        Application.DisplayAlerts = True
        On Error GoTo 0

        Set wsNew = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        wsNew.Name = sheetNames(i)
        wsNew.Tab.Color = tabColors(i)

        headers.Copy Destination:=wsNew.Range("A1")
        wsNew.Range("A1:K1").Font.Bold = True
        wsNew.Cells(1, 12).Value = "Email?"
        wsNew.Cells(1, 13).Value = "Match Office"
        wsNew.Cells(1, 14).Value = "Match Acct"
        wsNew.Cells(1, 15).Value = "Status"
        wsNew.Cells(1, 16).Value = "Client Name"
        wsNew.Cells(1, 17).Value = "Client Type"
        wsNew.Cells(1, 18).Value = "Behavior"
        wsNew.Cells(1, 19).Value = "Notes"
        wsNew.Cells(1, 20).Value = "Notes 2"
        wsNew.Cells(1, 21).Value = "Behavior Match"

        With wsNew.Range("V1")
            .Value = "Time Slot: " & timeNotes(i)
            .Font.Bold = True
            .Font.Size = 11
            .Interior.Color = RGB(255, 255, 0)
        End With

        Dim destRow As Long: destRow = 2

        For j = 2 To lastRow
            val = Trim(wsSource.Cells(j, 10).Value)
            Dim k As Long, matchFound As Boolean: matchFound = False
            For k = LBound(groups(i)) To UBound(groups(i))
                If val = groups(i)(k) Then matchFound = True: Exit For
            Next k

            If matchFound Then
                wsNew.Range("A" & destRow & ":K" & destRow).Value = wsSource.Range("C" & j & ":M" & j).Value
                wsNew.Cells(destRow, 12).Value = ""

                Dim rowD As String: rowD = UCase(Trim(CStr(wsSource.Cells(j, 4).Value)))
                Dim rowE As String: rowE = UCase(Trim(CStr(wsSource.Cells(j, 5).Value)))

                Dim l As Long, matched As Boolean: matched = False
                For l = 1 To UBound(lookupData)
                    Dim lookupC As String: lookupC = UCase(Trim(CStr(lookupData(l, 3))))
                    Dim lookupD As String: lookupD = UCase(Trim(CStr(lookupData(l, 4))))

                    If lookupC <> "" And lookupC <> "-" Then
                        matched = (rowD = lookupC And rowE = lookupD)
                    Else
                        matched = (rowE = lookupD)
                    End If

                    If matched Then
                        wsNew.Cells(destRow, 13).Value = lookupC
                        wsNew.Cells(destRow, 14).Value = lookupD
                        wsNew.Cells(destRow, 15).Value = "Matched"
                        wsNew.Cells(destRow, 16).Value = lookupData(l, 1)
                        wsNew.Cells(destRow, 17).Value = lookupData(l, 7)
                        wsNew.Cells(destRow, 18).Value = lookupData(l, 8)
                        wsNew.Cells(destRow, 19).Value = lookupData(l, 9)
                        wsNew.Cells(destRow, 20).Value = lookupData(l, 10)

                        ' Correct behavior match logic
                        Dim inputBehavior As String: inputBehavior = UCase(Trim(CStr(wsSource.Cells(j, 11).Value)))
                        Dim lookupBehavior As String: lookupBehavior = UCase(Trim(CStr(lookupData(l, 8))))
                        If inputBehavior = lookupBehavior Then
                            wsNew.Cells(destRow, 21).Value = "Matched"
                        Else
                            wsNew.Cells(destRow, 21).Value = "Unmatched"
                        End If
                        Exit For
                    End If
                Next l

                If Not matched Then
                    wsNew.Cells(destRow, 15).Value = "Unmatched"
                    wsNew.Cells(destRow, 21).Value = "Unmatched"
                End If

                ' Highlighting
                If wsNew.Cells(destRow, 15).Value = "Unmatched" Then wsNew.Cells(destRow, 15).Interior.Color = RGB(255, 192, 0)
                If wsNew.Cells(destRow, 21).Value = "Unmatched" Then wsNew.Cells(destRow, 21).Interior.Color = RGB(255, 192, 0)

                destRow = destRow + 1
            End If
        Next j

        ' Highlight date mismatches
        Dim todayVal As String: todayVal = Format(Date, "yyyymmdd")
        For r = 2 To destRow - 1
            If Trim(CStr(wsNew.Cells(r, 4).Value)) <> "" And Trim(CStr(wsNew.Cells(r, 4).Value)) <> todayVal Then
                wsNew.Cells(r, 4).Interior.Color = RGB(255, 0, 0)
            End If
        Next r

        ' Sort
        With wsNew.Sort
            .SortFields.Clear
            .SortFields.Add Key:=wsNew.Range("J2:J" & destRow - 1), Order:=xlAscending
            .SortFields.Add Key:=wsNew.Range("K2:K" & destRow - 1), Order:=xlAscending
            .SortFields.Add Key:=wsNew.Range("I2:I" & destRow - 1), Order:=xlAscending
            .SortFields.Add Key:=wsNew.Range("E2:E" & destRow - 1), Order:=xlAscending
            .SetRange wsNew.Range("A1:V" & destRow - 1)
            .Header = xlYes
            .Apply
        End With

        wsNew.Columns("A:W").AutoFit
        wsNew.Rows("1:1").AutoFilter
    Next i

    ' Select the first created sheet
    ThisWorkbook.Sheets(sheetNames(0)).Activate

    Application.ScreenUpdating = True
    MsgBox "Data split, labeled, and validated!"
End Sub
